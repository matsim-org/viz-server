image: maven:3-jdk-8

stages:
    - test
    - build
    - deploy

#run tests for every commit
test:
    stage: test
    script: "mvn test --batch-mode"

#run the build with artifacts only for commits to develop and master after tests were run
build:
    stage: build
    only:
      - master
      - develop
    script: "mvn install -DskipTests --batch-mode"
    artifacts:
      when: on_success
      paths:
        - auth/target/*.jar
        - files/target/*.jar
deploy:
    stage: deploy
    script:
    - which ssh-agent
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - '[[ -f /.dockerenv ]] && mkdir -p ~/.ssh && echo "$KNOWN_HOST" > ~/.ssh/known_hosts'
    - ssh webvis@cnode00.vsp.tu-berlin.de 'sudo service webvis-files stop'
    - ssh webvis@cnode00.vsp.tu-berlin.de 'sudo service webvis-auth stop'
    - ls -lhaA
    - ls -lhaA auth/
    - ls -lhaA files/
#    - scp auth/target/auth-server.jar webvis@cnode00.vsp.tu-berlin.de:/home/webvis/matsim-webvis-auth/
#    - scp files/target/file-server.jar webvis@cnode00.vsp.tu-berlin.de:/home/webvis/matsim-webvis-files/
#    - ssh webvis@cnode00.vsp.tu-berlin.de 'sudo service webvis-auth start'
#    - ssh webvis@cnode00.vsp.tu-berlin.de 'sudo service webvis-files start'